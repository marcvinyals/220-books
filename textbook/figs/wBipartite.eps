%!PS-Adobe-3.0 EPSF-3.0
%%Creator: xpdf/pdftops 2.01
%%LanguageLevel: 2
%%BoundingBox: 209 546 348 742
%%HiResBoundingBox: 209.965 546.152 347.88 741.686
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 2.01 0
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 14 def
/pdfSetup {
  3 1 roll 2 array astore
  /setpagedevice where {
    pop 3 dict begin
      /PageSize exch def
      /ImagingBBox null def
      /Policies 1 dict dup begin /PageSize 3 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
} def
/pdfEndPage { end } def
% separation convention operators
/findcmykcustomcolor where {
  pop
}{
  /findcmykcustomcolor { 5 array astore } def
} ifelse
/setcustomcolor where {
  pop
}{
  /setcustomcolor {
    exch
    [ exch /Separation exch dup 4 get exch /DeviceCMYK exch
      0 4 getinterval cvx
      [ exch /dup load exch { mul exch dup } /forall load
        /pop load dup ] cvx
    ] setcolorspace setcolor
  } def
} ifelse
/customcolorimage where {
  pop
}{
  /customcolorimage {
    gsave
    [ exch /Separation exch dup 4 get exch /DeviceCMYK exch
      0 4 getinterval cvx
      [ exch /dup load exch { mul exch dup } /forall load
        /pop load dup ] cvx
    ] setcolorspace
    10 dict begin
      /ImageType 1 def
      /DataSource exch def
      /ImageMatrix exch def
      /BitsPerComponent exch def
      /Height exch def
      /Width exch def
      /Decode [1 0] def
    currentdict end
    image
    grestore
  } def
} ifelse
% PDF color state
/sCol {
  pdfLastStroke not {
    pdfStroke aload length
    dup 1 eq {
      pop setgray
    }{
      dup 3 eq {
        pop setrgbcolor
      }{
        4 eq {
          setcmykcolor
        }{
          findcmykcustomcolor exch setcustomcolor
        } ifelse
      } ifelse
    } ifelse
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
/fCol {
  pdfLastFill not {
    pdfFill aload length
    dup 1 eq {
      pop setgray
    }{
      dup 3 eq {
        pop setrgbcolor
      }{
        4 eq {
          setcmykcolor
        }{
          findcmykcustomcolor exch setcustomcolor
        } ifelse
      } ifelse
    } ifelse
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16L3 {
  1 index /CIDFont resourcestatus {
    pop pop 1 index /CIDFont findresource /CIDFontType known
  } {
    false
  } ifelse
  {
    0 eq { /Identity-H } { /Identity-V } ifelse
    exch 1 array astore composefont pop
  } {
    pdfMakeFont16
  } ifelse
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q { end grestore } def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% color operators
/g { dup 1 array astore /pdfFill exch def setgray
     /pdfLastFill true def /pdfLastStroke false def } def
/G { dup 1 array astore /pdfStroke exch def setgray
     /pdfLastStroke true def /pdfLastFill false def } def
/rg { 3 copy 3 array astore /pdfFill exch def setrgbcolor
      /pdfLastFill true def /pdfLastStroke false def } def
/RG { 3 copy 3 array astore /pdfStroke exch def setrgbcolor
      /pdfLastStroke true def /pdfLastFill false def } def
/k { 4 copy 4 array astore /pdfFill exch def setcmykcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/K { 4 copy 4 array astore /pdfStroke exch def setcmykcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/ck { 6 copy 6 array astore /pdfFill exch def
      findcmykcustomcolor exch setcustomcolor
      /pdfLastFill true def /pdfLastStroke false def } def
/CK { 6 copy 6 array astore /pdfStroke exch def
      findcmykcustomcolor exch setcustomcolor
      /pdfLastStroke true def /pdfLastFill false def } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/awcp { % awidthcharpath
  exch {
    1 string dup 0 3 index put 2 index charpath
    3 index 3 index rmoveto
    4 index eq { 5 index 5 index rmoveto } if
  } forall
  6 {pop} repeat
} def
/Tj { fCol
      0 pdfTextRise pdfTextMat dtransform rmoveto
      1 index stringwidth pdfTextMat idtransform pop
      sub 1 index length dup 0 ne { div } { pop pop 0 } ifelse
      pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
      4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
      pdfTextMat dtransform
      6 5 roll
      currentpoint 8 2 roll
      pdfTextRender 1 and 0 eq {
        6 copy awidthshow
      } if
      pdfTextRender 3 and dup 1 eq exch 2 eq or {
        8 6 roll moveto
        currentfont /FontType get 3 eq { fCol } { sCol } ifelse
        false awcp currentpoint stroke moveto
      } {
        8 {pop} repeat
      } ifelse
      0 pdfTextRise neg pdfTextMat dtransform rmoveto } def
/Tj16 { pdfTextRender 1 and 0 eq { fCol } { sCol } ifelse
        0 pdfTextRise pdfTextMat dtransform rmoveto
        2 index stringwidth pdfTextMat idtransform pop
        sub exch div
        pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
        4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
        pdfTextMat dtransform
        6 5 roll awidthshow
        0 pdfTextRise neg pdfTextMat dtransform rmoveto } def
/Tj16V { pdfTextRender 1 and 0 eq { fCol } { sCol } ifelse
         0 pdfTextRise pdfTextMat dtransform rmoveto
         2 index stringwidth pdfTextMat idtransform exch pop
         sub exch div
         0 pdfWordSpacing pdfTextMat dtransform 32
         4 3 roll pdfCharSpacing add 0 exch
         pdfTextMat dtransform
         6 5 roll awidthshow
         0 pdfTextRise neg pdfTextMat dtransform rmoveto } def
/TJm { pdfFontSize 0.001 mul mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { pdfFontSize 0.001 mul mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
% Level 1 image operators
/pdfIm1 {
  /pdfImBuf1 4 index string def
  { currentfile pdfImBuf1 readhexstring pop } image
} def
/pdfIm1Sep {
  /pdfImBuf1 4 index string def
  /pdfImBuf2 4 index string def
  /pdfImBuf3 4 index string def
  /pdfImBuf4 4 index string def
  { currentfile pdfImBuf1 readhexstring pop }
  { currentfile pdfImBuf2 readhexstring pop }
  { currentfile pdfImBuf3 readhexstring pop }
  { currentfile pdfImBuf4 readhexstring pop }
  true 4 colorimage
} def
/pdfImM1 {
  /pdfImBuf1 4 index 7 add 8 idiv string def
  { currentfile pdfImBuf1 readhexstring pop } imagemask
} def
% Level 2 image operators
/pdfImBuf 100 string def
/pdfIm {
  image
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImSep {
  findcmykcustomcolor exch
  dup /Width get /pdfImBuf1 exch string def
  begin Width Height BitsPerComponent ImageMatrix DataSource end
  /pdfImData exch def
  { pdfImData pdfImBuf1 readstring pop
    0 1 2 index length 1 sub {
      1 index exch 2 copy get 255 exch sub put
    } for }
  6 5 roll customcolorimage
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImM {
  fCol imagemask
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%EndSetup
%<ipe version="60012" creator="Ipe 6.0 preview 12">
%<info created="D:20040203103158" modified="D:20040208192448" bbox="cropbox"/>
%<page mediabox="0 0 595 842">
%<layer name="alpha"/>
%<path layer="alpha" stroke="black" matrix="1 0 0 1 -2.18506 13.2877" pen="fat">
%12.6491 0 0 12.6491 336 700 e
%</path>
%<path stroke="black" matrix="1 0 0 1 -111.09 29.0367" fill="black" pen="fat">
%12.6491 0 0 12.6491 336 700 e
%</path>
%<path stroke="black" matrix="1 0 0 1 -112.704 -141.199" fill="black" pen="fat">
%12.6491 0 0 12.6491 336 700 e
%</path>
%<path stroke="black" matrix="1 0 0 1 -113.386 -85.3305" fill="black" pen="fat">
%12.6491 0 0 12.6491 336 700 e
%</path>
%<path stroke="black" matrix="1 0 0 1 -112.431 -29.8235" fill="black" pen="fat">
%12.6491 0 0 12.6491 336 700 e
%</path>
%<path stroke="black" matrix="1 0 0 1 -1.00084 -57.4338" pen="fat">
%12.6491 0 0 12.6491 336 700 e
%</path>
%<path stroke="black" matrix="1 0 0 1 -0.768876 -129.442" pen="fat">
%12.6491 0 0 12.6491 336 700 e
%</path>
%<path stroke="black" pen="fat">
%237.496 727.775 m
%321.587 716.525 l
%</path>
%<path stroke="black" pen="fat">
%321.794 709.35 m
%234.646 676.285 l
%</path>
%<path stroke="black" pen="fat">
%235.78 722.568 m
%325.995 651.45 l
%</path>
%<path stroke="black" pen="fat">
%236.105 668.49 m
%322.619 645.163 l
%</path>
%<path stroke="black" pen="fat">
%323.404 637.512 m
%233.733 620.7 l
%</path>
%<path stroke="black" pen="fat">
%326.322 633.363 m
%233.655 566.06 l
%</path>
%</page>
%</ipe>
pdfStartPage
[] 0 d
0 i
0 j
0 J
10 M
1 w
0 g
0 G
209.965 546.152 137.915 195.534 re
W
q
q
1.2 w
346.464 713.288 m
346.464 720.274 340.801 725.937 333.815 725.937 c
326.829 725.937 321.166 720.274 321.166 713.288 c
321.166 706.302 326.829 700.639 333.815 700.639 c
340.801 700.639 346.464 706.302 346.464 713.288 c
h
S
Q
q
1.2 w
237.559 729.037 m
237.559 736.023 231.896 741.686 224.91 741.686 c
217.924 741.686 212.261 736.023 212.261 729.037 c
212.261 722.051 217.924 716.388 224.91 716.388 c
231.896 716.388 237.559 722.051 237.559 729.037 c
h
f*
237.559 729.037 m
237.559 736.023 231.896 741.686 224.91 741.686 c
217.924 741.686 212.261 736.023 212.261 729.037 c
212.261 722.051 217.924 716.388 224.91 716.388 c
231.896 716.388 237.559 722.051 237.559 729.037 c
h
S
Q
q
1.2 w
235.945 558.801 m
235.945 565.787 230.282 571.45 223.296 571.45 c
216.31 571.45 210.647 565.787 210.647 558.801 c
210.647 551.815 216.31 546.152 223.296 546.152 c
230.282 546.152 235.945 551.815 235.945 558.801 c
h
f*
235.945 558.801 m
235.945 565.787 230.282 571.45 223.296 571.45 c
216.31 571.45 210.647 565.787 210.647 558.801 c
210.647 551.815 216.31 546.152 223.296 546.152 c
230.282 546.152 235.945 551.815 235.945 558.801 c
h
S
Q
q
1.2 w
235.263 614.669 m
235.263 621.655 229.6 627.319 222.614 627.319 c
215.628 627.319 209.965 621.655 209.965 614.669 c
209.965 607.684 215.628 602.02 222.614 602.02 c
229.6 602.02 235.263 607.684 235.263 614.669 c
h
f*
235.263 614.669 m
235.263 621.655 229.6 627.319 222.614 627.319 c
215.628 627.319 209.965 621.655 209.965 614.669 c
209.965 607.684 215.628 602.02 222.614 602.02 c
229.6 602.02 235.263 607.684 235.263 614.669 c
h
S
Q
q
1.2 w
236.218 670.177 m
236.218 677.162 230.555 682.826 223.569 682.826 c
216.583 682.826 210.92 677.162 210.92 670.177 c
210.92 663.191 216.583 657.527 223.569 657.527 c
230.555 657.527 236.218 663.191 236.218 670.177 c
h
f*
236.218 670.177 m
236.218 677.162 230.555 682.826 223.569 682.826 c
216.583 682.826 210.92 677.162 210.92 670.177 c
210.92 663.191 216.583 657.527 223.569 657.527 c
230.555 657.527 236.218 663.191 236.218 670.177 c
h
S
Q
q
1.2 w
347.648 642.566 m
347.648 649.552 341.985 655.215 334.999 655.215 c
328.013 655.215 322.35 649.552 322.35 642.566 c
322.35 635.58 328.013 629.917 334.999 629.917 c
341.985 629.917 347.648 635.58 347.648 642.566 c
h
S
Q
q
1.2 w
347.88 570.558 m
347.88 577.544 342.217 583.207 335.231 583.207 c
328.245 583.207 322.582 577.544 322.582 570.558 c
322.582 563.572 328.245 557.909 335.231 557.909 c
342.217 557.909 347.88 563.572 347.88 570.558 c
h
S
Q
q
1.2 w
237.496 727.775 m
321.587 716.525 l
S
Q
q
1.2 w
321.794 709.35 m
234.646 676.285 l
S
Q
q
1.2 w
235.78 722.568 m
325.995 651.45 l
S
Q
q
1.2 w
236.105 668.49 m
322.619 645.163 l
S
Q
q
1.2 w
323.404 637.512 m
233.733 620.7 l
S
Q
q
1.2 w
326.322 633.363 m
233.655 566.06 l
S
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
