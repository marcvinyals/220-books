%!PS-Adobe-3.0 EPSF-3.0
%%Creator: xpdf/pdftops 2.01
%%LanguageLevel: 2
%%BoundingBox: 68 603 462 765
%%HiResBoundingBox: 68.4939 603.351 461.22 764.649
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 2.01 0
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 14 def
/pdfSetup {
  3 1 roll 2 array astore
  /setpagedevice where {
    pop 3 dict begin
      /PageSize exch def
      /ImagingBBox null def
      /Policies 1 dict dup begin /PageSize 3 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
} def
/pdfEndPage { end } def
% separation convention operators
/findcmykcustomcolor where {
  pop
}{
  /findcmykcustomcolor { 5 array astore } def
} ifelse
/setcustomcolor where {
  pop
}{
  /setcustomcolor {
    exch
    [ exch /Separation exch dup 4 get exch /DeviceCMYK exch
      0 4 getinterval cvx
      [ exch /dup load exch { mul exch dup } /forall load
        /pop load dup ] cvx
    ] setcolorspace setcolor
  } def
} ifelse
/customcolorimage where {
  pop
}{
  /customcolorimage {
    gsave
    [ exch /Separation exch dup 4 get exch /DeviceCMYK exch
      0 4 getinterval cvx
      [ exch /dup load exch { mul exch dup } /forall load
        /pop load dup ] cvx
    ] setcolorspace
    10 dict begin
      /ImageType 1 def
      /DataSource exch def
      /ImageMatrix exch def
      /BitsPerComponent exch def
      /Height exch def
      /Width exch def
      /Decode [1 0] def
    currentdict end
    image
    grestore
  } def
} ifelse
% PDF color state
/sCol {
  pdfLastStroke not {
    pdfStroke aload length
    dup 1 eq {
      pop setgray
    }{
      dup 3 eq {
        pop setrgbcolor
      }{
        4 eq {
          setcmykcolor
        }{
          findcmykcustomcolor exch setcustomcolor
        } ifelse
      } ifelse
    } ifelse
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
/fCol {
  pdfLastFill not {
    pdfFill aload length
    dup 1 eq {
      pop setgray
    }{
      dup 3 eq {
        pop setrgbcolor
      }{
        4 eq {
          setcmykcolor
        }{
          findcmykcustomcolor exch setcustomcolor
        } ifelse
      } ifelse
    } ifelse
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16L3 {
  1 index /CIDFont resourcestatus {
    pop pop 1 index /CIDFont findresource /CIDFontType known
  } {
    false
  } ifelse
  {
    0 eq { /Identity-H } { /Identity-V } ifelse
    exch 1 array astore composefont pop
  } {
    pdfMakeFont16
  } ifelse
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q { end grestore } def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% color operators
/g { dup 1 array astore /pdfFill exch def setgray
     /pdfLastFill true def /pdfLastStroke false def } def
/G { dup 1 array astore /pdfStroke exch def setgray
     /pdfLastStroke true def /pdfLastFill false def } def
/rg { 3 copy 3 array astore /pdfFill exch def setrgbcolor
      /pdfLastFill true def /pdfLastStroke false def } def
/RG { 3 copy 3 array astore /pdfStroke exch def setrgbcolor
      /pdfLastStroke true def /pdfLastFill false def } def
/k { 4 copy 4 array astore /pdfFill exch def setcmykcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/K { 4 copy 4 array astore /pdfStroke exch def setcmykcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/ck { 6 copy 6 array astore /pdfFill exch def
      findcmykcustomcolor exch setcustomcolor
      /pdfLastFill true def /pdfLastStroke false def } def
/CK { 6 copy 6 array astore /pdfStroke exch def
      findcmykcustomcolor exch setcustomcolor
      /pdfLastStroke true def /pdfLastFill false def } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/awcp { % awidthcharpath
  exch {
    1 string dup 0 3 index put 2 index charpath
    3 index 3 index rmoveto
    4 index eq { 5 index 5 index rmoveto } if
  } forall
  6 {pop} repeat
} def
/Tj { fCol
      0 pdfTextRise pdfTextMat dtransform rmoveto
      1 index stringwidth pdfTextMat idtransform pop
      sub 1 index length dup 0 ne { div } { pop pop 0 } ifelse
      pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
      4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
      pdfTextMat dtransform
      6 5 roll
      currentpoint 8 2 roll
      pdfTextRender 1 and 0 eq {
        6 copy awidthshow
      } if
      pdfTextRender 3 and dup 1 eq exch 2 eq or {
        8 6 roll moveto
        currentfont /FontType get 3 eq { fCol } { sCol } ifelse
        false awcp currentpoint stroke moveto
      } {
        8 {pop} repeat
      } ifelse
      0 pdfTextRise neg pdfTextMat dtransform rmoveto } def
/Tj16 { pdfTextRender 1 and 0 eq { fCol } { sCol } ifelse
        0 pdfTextRise pdfTextMat dtransform rmoveto
        2 index stringwidth pdfTextMat idtransform pop
        sub exch div
        pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
        4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
        pdfTextMat dtransform
        6 5 roll awidthshow
        0 pdfTextRise neg pdfTextMat dtransform rmoveto } def
/Tj16V { pdfTextRender 1 and 0 eq { fCol } { sCol } ifelse
         0 pdfTextRise pdfTextMat dtransform rmoveto
         2 index stringwidth pdfTextMat idtransform exch pop
         sub exch div
         0 pdfWordSpacing pdfTextMat dtransform 32
         4 3 roll pdfCharSpacing add 0 exch
         pdfTextMat dtransform
         6 5 roll awidthshow
         0 pdfTextRise neg pdfTextMat dtransform rmoveto } def
/TJm { pdfFontSize 0.001 mul mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { pdfFontSize 0.001 mul mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
% Level 1 image operators
/pdfIm1 {
  /pdfImBuf1 4 index string def
  { currentfile pdfImBuf1 readhexstring pop } image
} def
/pdfIm1Sep {
  /pdfImBuf1 4 index string def
  /pdfImBuf2 4 index string def
  /pdfImBuf3 4 index string def
  /pdfImBuf4 4 index string def
  { currentfile pdfImBuf1 readhexstring pop }
  { currentfile pdfImBuf2 readhexstring pop }
  { currentfile pdfImBuf3 readhexstring pop }
  { currentfile pdfImBuf4 readhexstring pop }
  true 4 colorimage
} def
/pdfImM1 {
  /pdfImBuf1 4 index 7 add 8 idiv string def
  { currentfile pdfImBuf1 readhexstring pop } imagemask
} def
% Level 2 image operators
/pdfImBuf 100 string def
/pdfIm {
  image
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImSep {
  findcmykcustomcolor exch
  dup /Width get /pdfImBuf1 exch string def
  begin Width Height BitsPerComponent ImageMatrix DataSource end
  /pdfImData exch def
  { pdfImData pdfImBuf1 readstring pop
    0 1 2 index length 1 sub {
      1 index exch 2 copy get 255 exch sub put
    } for }
  6 5 roll customcolorimage
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImM {
  fCol imagemask
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%EndSetup
%<ipe version="60012" creator="Ipe 6.0 preview 12">
%<info created="D:20040203103158" modified="D:20040209185815" bbox="cropbox"/>
%<page mediabox="0 0 595 842">
%<layer name="alpha"/>
%<path layer="alpha" stroke="black" matrix="1 0 0 1 -254.857 52" pen="normal">
%12.6491 0 0 12.6491 336 700 e
%</path>
%<path stroke="black" matrix="1 0 0 1 112.571 -54.8571" pen="normal">
%12.6491 0 0 12.6491 336 700 e
%</path>
%<path stroke="black" matrix="1 0 0 1 -54.8571 29.7143" fill="black" pen="normal">
%12.6491 0 0 12.6491 336 700 e
%</path>
%<path stroke="gray4" matrix="1 0 0 1 -164 -28.5714" fill="red" pen="normal">
%12.6491 0 0 12.6491 336 700 e
%</path>
%<path stroke="gray4" matrix="1 0 0 1 -56 -84" fill="gray3" pen="normal">
%12.6491 0 0 12.6491 336 700 e
%</path>
%<path stroke="gray4" matrix="1 0 0 1 57.1429 29.7143" fill="gray3" pen="normal">
%12.6491 0 0 12.6491 336 700 e
%</path>
%<path stroke="black" pen="heavier" arrow="large">
%181.36 679.937 m
%269.079 725.913 l
%</path>
%<path stroke="black" pen="heavier" arrow="large">
%281.217 717.065 m
%282.079 628.477 l
%</path>
%<path stroke="black" pen="heavier" arrow="large">
%293.791 729.583 m
%380.544 730.836 l
%</path>
%<path stroke="black" pen="heavier" arrow="large">
%399.727 718.914 m
%441.769 655.807 l
%</path>
%<path stroke="black" pen="heavier" arrow="large">
%292.644 616.363 m
%437.228 639.545 l
%</path>
%<path stroke="black" pen="heavier" arrow="large">
%268.309 620.828 m
%181.314 662.87 l
%</path>
%<path stroke="black" pen="heavier" arrow="large">
%160.857 677.414 m
%88.1493 741.469 l
%</path>
%</page>
%</ipe>
pdfStartPage
[] 0 d
0 i
0 j
0 J
10 M
1 w
0 g
0 G
68.4939 603.351 392.726 161.298 re
W
q
q
0.4 w
93.7921 752 m
93.7921 758.986 88.1289 764.649 81.143 764.649 c
74.1571 764.649 68.4939 758.986 68.4939 752 c
68.4939 745.014 74.1571 739.351 81.143 739.351 c
88.1289 739.351 93.7921 745.014 93.7921 752 c
h
S
Q
q
0.4 w
461.22 645.143 m
461.22 652.129 455.557 657.792 448.571 657.792 c
441.585 657.792 435.922 652.129 435.922 645.143 c
435.922 638.157 441.585 632.494 448.571 632.494 c
455.557 632.494 461.22 638.157 461.22 645.143 c
h
S
Q
q
0.4 w
293.792 729.714 m
293.792 736.7 288.129 742.363 281.143 742.363 c
274.157 742.363 268.494 736.7 268.494 729.714 c
268.494 722.728 274.157 717.065 281.143 717.065 c
288.129 717.065 293.792 722.728 293.792 729.714 c
h
f*
293.792 729.714 m
293.792 736.7 288.129 742.363 281.143 742.363 c
274.157 742.363 268.494 736.7 268.494 729.714 c
268.494 722.728 274.157 717.065 281.143 717.065 c
288.129 717.065 293.792 722.728 293.792 729.714 c
h
S
Q
q
0.4 w
0.5 G
0.375 g
184.649 671.429 m
184.649 678.415 178.986 684.078 172 684.078 c
165.014 684.078 159.351 678.415 159.351 671.429 c
159.351 664.443 165.014 658.779 172 658.779 c
178.986 658.779 184.649 664.443 184.649 671.429 c
h
f*
184.649 671.429 m
184.649 678.415 178.986 684.078 172 684.078 c
165.014 684.078 159.351 678.415 159.351 671.429 c
159.351 664.443 165.014 658.779 172 658.779 c
178.986 658.779 184.649 664.443 184.649 671.429 c
h
S
Q
q
0.4 w
0.5 G
0.375 g
292.649 616 m
292.649 622.986 286.986 628.649 280 628.649 c
273.014 628.649 267.351 622.986 267.351 616 c
267.351 609.014 273.014 603.351 280 603.351 c
286.986 603.351 292.649 609.014 292.649 616 c
h
f*
292.649 616 m
292.649 622.986 286.986 628.649 280 628.649 c
273.014 628.649 267.351 622.986 267.351 616 c
267.351 609.014 273.014 603.351 280 603.351 c
286.986 603.351 292.649 609.014 292.649 616 c
h
S
Q
q
0.4 w
0.5 G
0.375 g
405.792 729.714 m
405.792 736.7 400.129 742.363 393.143 742.363 c
386.157 742.363 380.494 736.7 380.494 729.714 c
380.494 722.728 386.157 717.065 393.143 717.065 c
400.129 717.065 405.792 722.728 405.792 729.714 c
h
f*
405.792 729.714 m
405.792 736.7 400.129 742.363 393.143 742.363 c
386.157 742.363 380.494 736.7 380.494 729.714 c
380.494 722.728 386.157 717.065 393.143 717.065 c
400.129 717.065 405.792 722.728 405.792 729.714 c
h
S
Q
q
0.8 w
181.36 679.937 m
269.079 725.913 l
S
269.079 725.913 m
258.674 724.223 l
261.769 718.318 l
269.079 725.913 l
h
f*
269.079 725.913 m
258.674 724.223 l
261.769 718.318 l
269.079 725.913 l
h
S
Q
q
0.8 w
281.217 717.065 m
282.079 628.477 l
S
282.079 628.477 m
285.315 638.509 l
278.649 638.444 l
282.079 628.477 l
h
f*
282.079 628.477 m
285.315 638.509 l
278.649 638.444 l
282.079 628.477 l
h
S
Q
q
0.8 w
293.791 729.583 m
380.544 730.836 l
S
380.544 730.836 m
370.497 734.025 l
370.593 727.359 l
380.544 730.836 l
h
f*
380.544 730.836 m
370.497 734.025 l
370.593 727.359 l
380.544 730.836 l
h
S
Q
q
0.8 w
399.727 718.914 m
441.769 655.807 l
S
441.769 655.807 m
438.999 665.977 l
433.451 662.281 l
441.769 655.807 l
h
f*
441.769 655.807 m
438.999 665.977 l
433.451 662.281 l
441.769 655.807 l
h
S
Q
q
0.8 w
292.644 616.363 m
437.228 639.545 l
S
437.228 639.545 m
426.826 641.253 l
427.882 634.671 l
437.228 639.545 l
h
f*
437.228 639.545 m
426.826 641.253 l
427.882 634.671 l
437.228 639.545 l
h
S
Q
q
0.8 w
268.309 620.828 m
181.314 662.87 l
S
181.314 662.87 m
188.867 655.518 l
191.768 661.52 l
181.314 662.87 l
h
f*
181.314 662.87 m
188.867 655.518 l
191.768 661.52 l
181.314 662.87 l
h
S
Q
q
0.8 w
160.857 677.414 m
88.1493 741.469 l
S
88.1493 741.469 m
93.4492 732.357 l
97.8562 737.36 l
88.1493 741.469 l
h
f*
88.1493 741.469 m
93.4492 732.357 l
97.8562 737.36 l
88.1493 741.469 l
h
S
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
